@page "/cart"

@using BikeDistributor.Domain.Models;
@using BikeDistributor.Domain.Entities;
@using BikeDistributor.Infrastructure.core;
@using BikeDistributor.Infrastructure.interfaces;
@using BikeShop.BlazorComponents.Components;
@using AKSoftware.Blazor.Utilities;
@using BikeShop.Helpers;
@using BikeShop.Services;
@using System.Text;
@using Newtonsoft.Json;

@inject HttpClient RestClient;
@inject IJSRuntime JSRuntime;
@inject BikeShopUserService UserService;
@inject ConfigService ConfigService;

<h3 class="text-muted"><span class="oi oi-pulse"></span>Catalogue<span class="oi oi-pulse"></span><span class="oi oi-pulse" style="margin-left:-15px"></span></h3>
@if (EntityBikes == null)
{
    <Spinner />
}
else
{
    <div class="float-right alert-warning" style="position:sticky; padding: 10px">
        <h4><span class="oi oi-cart"></span> Your Cart</h4>
    </div>
    <form>
        <div class="form-group">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <input class="form-control-lg" type="text" placeholder="Search">
                    </div>
                </div>
               <Button HTMLCssClass="btn-primary" HTMLId="btnAdvancedSearch" Label="Find my Bike" />
            </div>
            <br />
            <div class="input-gthickoup">
                <div class="input-group-text">
                    <input type="radio" class="p-1" aria-label="Radio button for following text input" checked><span style="padding: 5px">All</span> 
                    <input type="radio" class="p-1" aria-label="Radio button for following text input"><span style="padding: 5px">Only Standard Bikes</span> 
                    <input type="radio" class="p-1"  aria-label="Radio button for following text input"><span style="padding: 5px">Only Customisable Bikes</span>
                </div>
            </div>
        </div>
    </form>

    <hr />
    <div class="card-group" style="justify-content: space-between;">
        @foreach (MongoEntityBike meb in EntityBikes)
        {
            <div class="card border-dark mb-3" style="max-width: 18rem;">
                <div class="card-header"><h4 class="badge badge-pill badge-light" style="padding: 10px;border:1px solid #000"><em>@meb.Bike.Brand</em></h4></div>
                <div class="card-body text-dark">
                    <h5 class="card-title">@meb.Bike.Model</h5>
                    <p class="card-text">@meb.Bike.Description</p>
                    <Button HTMLCssClass="btn-success btn-sm" Label="Buy" HTMLId="@(meb.Id.Replace(" ","_") + "_buyButton")" ClickEventName="Cart_addItemClick"  />
                    @if (meb.IsStandard == false)
                    {
                        <Button HTMLCssClass="btn-info btn-sm" Label="Customise" HTMLId="@(meb.Id.Replace(" ","_") + "_buyButton")"  />
                    }        
                </div>
                <div class="card-footer text-muted">
                    @(meb.Bike.isStandard == true ? "only:" : "from:")
                    <span class="oi oi-dollar"></span> @meb.Bike.BasePrice
                </div>
            </div>
        }
    </div>
}
@code {
    private List<MongoEntityBike> EntityBikes;

    public void SubscribeToAddItemToCart()
    {
        MessagingCenter.Subscribe<Button, string>(this, "Cart_addItemClick", (sender, value) =>
        {

        });
    }
    private async Task GetBikesAsync()
    {
        var url = ConfigService.GetUrl("BikeList.Read");
        var jsonResponse = await RestClient.GetStringAsync(url);
        EntityBikes = JsonUtils.DeserializeMongoEntityBikeList(jsonResponse);
    }
    protected override async Task OnInitializedAsync()
    {
        await GetBikesAsync();
    }

    //protected async override Task OnAfterRenderAsync(bool firstRender)
    //{

    //}

}
