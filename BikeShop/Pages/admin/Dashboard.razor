@page "/admin/dashboard"
@using Microsoft.Extensions.Configuration
@using BikeDistributor.Domain.Models;
@using BikeDistributor.Domain.Entities;
@using BikeDistributor.Infrastructure.core;
@inject IConfiguration Configuration;
@inject HttpClient RestClient;
<h3>Admin Dashboard</h3>
<div>
    <!--ecce homo <span>@url</span>-->@*<span>@Configuration.GetSection("BikeShopWS").GetValue("baseUrl", "")</span>*@
    <span>@responseContent</span>
</div>
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="#">Stats</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" href="#">Bikes</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Bikes' Options</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Customers</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Orders</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#">Discounts</a>
    </li>
</ul>
@if (EntityBikes == null)
{
    <p><em>Loading...</em></p>
    
}
else
{
    @foreach (MongoEntityBike e in EntityBikes)
    {
        <div>
            <h4>@e.Bike.Model</h4>
            <span>@e.TotalPrice</span>
            <div>
                Details:<br />
                <span>@e.Bike.BasePrice</span><br />
                <span>@e.Bike.Brand</span><br />
                @if(e.SelectedOptions != null) { 
                    foreach(BikeOption o in e.SelectedOptions)
                        {
                            <span>@o.Name</span>
                        }
                }
                
            </div>
        </div>
    }
}
@code {
    private List<MongoEntityBike> EntityBikes;
    //private string url;
    private string responseContent;

    protected override async Task OnInitializedAsync()
    {
        //url = Configuration.GetSection("BikeShopWS").GetValue("baseUrl", "");
        try
        {
            var jsonResponse = await RestClient.GetStringAsync("/bike");
            EntityBikes = JsonUtils.DeserializeMongoEntityBikeList(jsonResponse);
            responseContent = "items fetched: " + EntityBikes.Count.ToString();
            responseContent += "<br />" + jsonResponse;
           
            //EntityBikes = await RestClient.GetFromJsonAsync<List<MongoEntityBike>>("/bike");

        }
        catch (Exception ex)
        {
            responseContent = ex.Message + " " + ex.InnerException + ex.StackTrace;
        }

    }

}
